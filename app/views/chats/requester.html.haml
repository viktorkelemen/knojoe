%div{ class: "chat_status #{ 'waiting' unless @chat.finished? || @chat.started? } #{ 'not_started' unless @chat.started? }" }
  = render 'chat'
  = link_to 'Thank you and exit', '#', class: 'btn btn-danger finish_button'

:javascript
  var chatTimerOffset = #{ @chat.started_offset(-1) };
  var connectionTimer;

- unless @chat.finished? || @chat.started?
  :javascript
    var CONNECTION_TIMEOUT_LIMIT = 30 * 1000;
    connectionTimer = setTimeout(function(){
      sendConnectionTimeup();
    }, CONNECTION_TIMEOUT_LIMIT);

:javascript
    var CHAT_TIMEOUT_LIMIT = (3 * 60 - chatTimerOffset) * 1000;
    var CHAT_TIMEOUT_WARNING = 10 * 1000;

    var chatTimer = setTimeout(function(){
      setInterval( function () {
        sendChatTimeup();
      }, CHAT_TIMEOUT_WARNING);
    }, CHAT_TIMEOUT_LIMIT);

  var channel = pusher.subscribe("channel_chat_#{@chat.id}");

  function initTimer(offset) {
    timer = K.Timer(offset);
    timer.start();
    timer.promise().progress( function (value) {
      updateTimerUI(value);
     });

    timer.promise().done( function (value) {
      updateTimerUI(value);
    });
  }
  channel.bind('chat_event', function(data) {

    if (data.author_id == #{current_user.id}) {
      $(data.html).addClass('me_msg').appendTo('#messages');
    } else {
      $(data.html).appendTo('#messages');
      $('#typing_msg').remove();
    }

  });

  // Handling status events coming with pusher
  channel.bind('chat_status_event', function(data) {
    if (data && data.html) {
      $('#messages').append(data.html);

      if (data.type == 'timeout') {
        $('.chat_status').removeClass('waiting');
      }
    }

    // FIX: this should not be here
    // It is to detect when the villager joined the discussion
    if (connectionTimer !== undefined) {
      clearTimeout(connectionTimer);
      connectionTimer = undefined;
    };
  });

  channel.bind('chat_start_event', function(data) {
    // chat started
    $('.chat_status').removeClass('waiting not_started');
    initTimer(0);
  });

  function sendConnectionTimeup() {
    $.ajax({
      url: "#{connection_timeout_chat_path(@chat)}",
      type: "post",
      success: function() {
        $('#message_content, .send_btn').attr('disabled', 'disabled');
      },
      error: function(error) {
        console.error(error);
      }
    });
  }

  function sendChatTimeup() {
    $.ajax({
      url: "#{chat_timeout_chat_path(@chat)}",
      type: "post",
      success: function() { },
      error: function(error) {
        console.error(error);
      }
    });
  }

  $('.finish_button').click(function(e) {
    e.preventDefault();

    var thankyouMessage = prompt('Please say thank you to the fellow knojoer');

    if (thankyouMessage !== null) {
      $.ajax({
        url: "#{finish_chat_path(@chat)}",
        type: "post",
        data: { message: thankyouMessage },
        success: function() {
          window.location = "#{review_chat_path(@chat)}";
        },
        error: function(error) {
          console.error(error);
        }
      });
    }
  });

  jQuery(function($) {
    if (chatTimerOffset !== -1) {
      initTimer(chatTimerOffset);
    }
  });
