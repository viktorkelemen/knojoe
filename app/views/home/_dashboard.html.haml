= content_for :title do
  - num = Chat.num_of_active_chats
  = "(%s)" % num if num > 0
  Knojoe

.dashboard
  %h4
    %strong Help
    a Knojoer by picking a conversation from below!
  .msgboard
    - @recent_chats.each do |chat|
      = render 'dashboard_message', chat: chat

:javascript

  function chatStartOrPickupHandler(data) {

    var entry, url, link;

    if (data) {

      // number of active chats
      if (data.active) {
        $(document).trigger('ui-num-of-active-chat', data.active);
      }

      switch (data.type) {
        case 'new':
          entry = $(data.html);
          entry.find('.timeago').timeago();

          link = entry.find('.pickup');
          url = link.attr('href') + '?socket_id=' + pusher.connection.socket_id;
          link.attr('href', url);

          if (data.requester_id == #{current_user.id}) {
            // append the pickup button but set as disabled
            link.attr('disabled', 'disabled');
          } else {
            $(document).trigger('ui-new-question', { msg: data.message, url: url });
          }

          $('.dashboard .msgboard').prepend(entry);
          break;
        // notify other members in presence channel that someone else picked up a chat
        case 'pickedup':
          // disabled the button of a chat that pickedup by others
          chatIsTaken(data);
          break;
      }
    }
  }

  var presenceChannel = pusher.subscribe("presence-home");

  presenceChannel.bind('pusher:subscription_succeeded', function(members) {
    $('.msgboard .msg .pickup').each(function(index, link) {
      $(link).setOrUpdateParam('socket_id', pusher.connection.socket_id);
    });

    updateOnlineMemberCount(presenceChannel.members.count)
  });

  var updateOnlineMemberCount = function() {
    var memberCount = presenceChannel.members.count;
    $('#available_member_count').text(presenceChannel.members.count);
  }

  var workerConnectionTimeoutHandler = function(data) {
    chatIsTaken(data);
  }

  var chatIsTaken = function(data) {
    var entry = $('[data-chat_id=' + data.chat_id + ']');
    entry.find('.btn').remove();
    var takenLabel = $('<span>').addClass('pickup label').text('Taken');
    entry.append(takenLabel);
  }

- if current_user.available_for_push_notification?
  :javascript
    presenceChannel.bind('chat_start_event', chatStartOrPickupHandler);
    presenceChannel.bind('chat_pickedup_event', chatStartOrPickupHandler);
    presenceChannel.bind('worker_connection_timeout_event', workerConnectionTimeoutHandler);

    presenceChannel.bind('pusher:member_added', function(member) {
      updateOnlineMemberCount();
    });

    presenceChannel.bind('pusher:member_removed', function(member) {
      updateOnlineMemberCount();
    });
