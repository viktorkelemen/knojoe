= content_for :title do
  - num = Chat.num_of_active_chats
  = "(%s)" % num if num > 0
  Knojoe

= content_for :footer do
  %p#online_info<
    Currently available member(s):
    %strong#available_member_count ...

.dashboard
  %h3 Latest questions
  .msgboard
    - @recent_chats.each do |chat|
      .msg{data: { chat_id: chat.id} }
        %p= chat.first_message.try(:content)
        = timeago(chat.created_at)
        - unless chat.started? || chat.finished?
          = link_to 'Pickup', responder_chat_path(chat), class: 'btn pickup btn-success'

:javascript

  function chatStartOrPickupHandler(data) {

    var entry, url;

    if (data) {

      // number of active chats
      if (data.active) {
        $(document).trigger('ui-num-of-active-chat', data.active);
      }

      entry = $('<div>').attr('data-chat-id', data.chat_id).addClass('msg');

      $('<time>').text(data.timestamp).appendTo(entry);
      $('<p>').text(data.message).appendTo(entry);
      switch (data.type) {
        case 'new':
          url = data.chat_path + '?socket_id=' + pusher.connection.socket_id;
          var pickupBtn = $('<a>').attr('href', url).addClass('btn pickup').text('Pick up')
          if (data.requester_id == #{current_user.id}) {
            // append the pickup button but set as disabled
            pickupBtn.attr('disabled', 'disabled').appendTo(entry);
          } else {
            // do not send push notification for user's own question
            pickupBtn.appendTo(entry);
            $(document).trigger('ui-new-question', { msg: data.message, url: url });
          }

          break;
        case 'pickedup':
          $('[data-chat-id=' + data.chat_id + ']').find('.btn').prop('disabled', 'disabled');
          break;
      }

      $('.dashboard .msgboard').prepend(entry);
    }
  }

  var presenceChannel = pusher.subscribe("presence-home");

  presenceChannel.bind('pusher:subscription_succeeded', function(members) {
    $('.msgboard .msg .pickup').each(function(index, link) {
      $(link).setOrUpdateParam('socket_id', pusher.connection.socket_id);
    });

    updateOnlineMemberCount(presenceChannel.members.count)
  });

  var updateOnlineMemberCount = function() {
    var memberCount = presenceChannel.members.count;
    $('#available_member_count').text(presenceChannel.members.count);
  }

- if current_user.available_for_push_notification?
  :javascript
    presenceChannel.bind('chat_start_event', chatStartOrPickupHandler);
    presenceChannel.bind('chat_pickedup_event', chatStartOrPickupHandler);

    presenceChannel.bind('pusher:member_added', function(member) {
      updateOnlineMemberCount();
    });

    presenceChannel.bind('pusher:member_removed', function(member) {
      updateOnlineMemberCount();
    });
